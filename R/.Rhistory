ss <- which(eigen.out.w[[2]][,2] < -0.03)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
pp <-10
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) < -0.03)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.03)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
pp <-20
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.03)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
pp <-7
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.03)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
k <- 3
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
plot(eigen.out.w[[1]])
#image(new.ad)
pp <-7
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.03)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
k <- 9
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
plot(eigen.out.w[[1]])
pp <-7
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.03)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
pp <-1
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.03)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
pp <-1
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
pp <-1
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) < 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
pp <-2
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) < 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2)
pp <-2
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=0.5)
pp <-2
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=3)
k <- 1
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
k <- 1
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
plot(eigen.out.w[[1]])
pp <-2
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=3)
pp <-2
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=0.1)
k <- 10
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (5+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
k <- 10
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (0.1+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
pp <-2
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=0.1)
pp <-2
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=0.6)
plot(eigen.out.w[[1]])
pp <-1
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=0.6)
k <- 10
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (0.1+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
pp <-1
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=60)
pp <-1
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=6000)
pp <-1
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=600)
pp <-2
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=600)
pp <-70
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=600)
pp <-50
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=600)
pp <-5
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=600)
pp <-1800
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=600)
pp <-18
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=600)
k <- 20
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (0.1+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
k <- 20
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (0.01+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
k <- 20
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (0.05+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
plot(eigen.out.w[[1]])
pp <-18
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=600)
pp <-18
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=60)
pp <-1
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=60)
k <- 20
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (0.05+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
plot(eigen.out.w[[1]])
pp <-1
matplot(eigen.out.w[[2]][,pp],type="l")
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
spheres3d(new.xyz[ss,],color=2,radius=60)
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(wigen.out.w[[1]]))
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
plot(eigen.out.w[[1]])
matplot(eigen.out.w[[2]][,pp],type="l")
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(wigen.out.w[[1]]))
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- c(1,2,3,4,5)
for(i in picks){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- 1:10
for(i in picks){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- 1:1000
for(i in picks){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),20)
for(i in picks){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
picks
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),20)
for(i in picks){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),20)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),20)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),20)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),20)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
k <- 4
ad.weight <- matrix(0,n,n)
for(i in 1:(n-1)){
for(j in (i+1):n){
v1 <- xy[i,] * V[i,k]
v2 <- xy[j,] * V[j,k]
len <- sqrt(sum((v1-v2)^2))
ad.weight[i,j] <- ad.weight[j,i] <-len
}
}
ad.weight = ad.mat * ad.weight
eigenout.k <- eigen(ad.weight)
par(mfrow=c(2,2))
image(ad.weight)
plot(eigenout.k[[1]])
plot(eigenout.k[[2]][,1],type="l")
plot(eigen.out[[2]][,1],type="l")
par(mfrow=c(1,1))
range(eigenout.k[[2]][,1])
range(eigen.out[[2]][,k])
k <-4
k <- k+1
ad.weight <- matrix(0,n,n)
for(i in 1:(n-1)){
for(j in (i+1):n){
v1 <- xy[i,] * V[i,k]
v2 <- xy[j,] * V[j,k]
len <- sqrt(sum((v1-v2)^2))
ad.weight[i,j] <- ad.weight[j,i] <-len
}
}
ad.weight = ad.mat * ad.weight
eigenout.k <- eigen(ad.weight)
par(mfrow=c(2,2))
#image(ad.weight)
plot(eigenout.k[[1]])
plot(eigenout.k[[2]][,1],type="l")
plot(eigen.out[[2]][,k],type="l")
par(mfrow=c(1,1))
range(eigenout.k[[2]][,1])
range(eigen.out[[2]][,k])
k <- 20
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (0.05+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
getwd()
setwd("C:/Users/ryamada/Desktop/git/R/")
setwd("C:/Users/ryamada/Desktop/git/R")
setwd("C:/Users/ryamada/Documents")
setwd("C:/Users/ryamada/Desktop")
setwd("C:/Users/ryamada/Desktop/git")
setwd("C:/Users/ryamada/Desktop/git/atom/R/")
devtools::create("C:/Users/ryamada/Desktop/git/atom/R/mysample")
