library(knitr)
library(rgl)
knit_hooks$set(webgl = hook_webgl)
library(igraph)
n <- 1000
t <- seq(from=0,to=1,len=n+1)*2*pi
t <- t[-1]
xy <- cbind(cos(t),sin(t))
plot(xy)
edge.list <- cbind(1:n,c(2:n,1))
g <- graph.edgelist(edge.list,directed=FALSE)
ad.mat <- as.matrix(get.adjacency(g))
image(ad.mat)
eigen.out <- eigen(ad.mat)
eg.val <- eigen.out[[1]]
plot(eg.val) # コサインカーブになっていることに注意
V <- eigen.out[[2]]
matplot(V[c(1:n,1),1:10],type="l")
matplot(V[c(1:n,1),11:20],type="l")
k <- 4
ad.weight <- matrix(0,n,n)
for(i in 1:(n-1)){
for(j in (i+1):n){
v1 <- xy[i,] * V[i,k]
v2 <- xy[j,] * V[j,k]
len <- sqrt(sum((v1-v2)^2))
ad.weight[i,j] <- ad.weight[j,i] <-len
}
}
ad.weight = ad.mat * ad.weight
eigenout.k <- eigen(ad.weight)
par(mfrow=c(2,2))
image(ad.weight)
plot(eigenout.k[[1]])
plot(eigenout.k[[2]][,1],type="l")
plot(eigen.out[[2]][,1],type="l")
par(mfrow=c(1,1))
range(eigenout.k[[2]][,1])
range(eigen.out[[2]][,k])
k <-4
k <- k+1
ad.weight <- matrix(0,n,n)
for(i in 1:(n-1)){
for(j in (i+1):n){
v1 <- xy[i,] * V[i,k]
v2 <- xy[j,] * V[j,k]
len <- sqrt(sum((v1-v2)^2))
ad.weight[i,j] <- ad.weight[j,i] <-len
}
}
ad.weight = ad.mat * ad.weight
eigenout.k <- eigen(ad.weight)
par(mfrow=c(2,2))
#image(ad.weight)
plot(eigenout.k[[1]])
plot(eigenout.k[[2]][,1],type="l")
plot(eigen.out[[2]][,k],type="l")
par(mfrow=c(1,1))
range(eigenout.k[[2]][,1])
range(eigen.out[[2]][,k])
library(devtools)
install_github("ryamada22/Ronlyryamada")
library(Ronlyryamada)
library(igraph)
sp.mesh <- my_sphere_tri_mesh(n.psi=40)
xyz <- sp.mesh$xyz
plot3d(sp.mesh$xyz)
segments3d(sp.mesh$xyz[c(t(sp.mesh$edge)),])
g <- graph.edgelist(sp.mesh[[2]],directed=FALSE)
ad <- get.adjacency(g)
ad. <- as.matrix(ad)
eigenout<- eigen(ad.)
plot(eigenout[[1]])
k <- 20
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (100+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
plot(eigen.out.w[[1]])
matplot(eigen.out.w[[2]][,pp],type="l")
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
pp <- 10
matplot(eigen.out.w[[2]][,pp],type="l")
pp <- 1
matplot(eigen.out.w[[2]][,pp],type="l")
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=600)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60000)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60000)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60000)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60000)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60000)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60000)
}
k <- 20
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
#new.xyz <- xyz * (100+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
new.xyz <- xyz
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
new.ad <- ad.
edge.arr.ind <- which(new.ad ==1,arr.ind=TRUE)
for(i in 1:length(edge.arr.ind[,1])){
j1 <- edge.arr.ind[i,1]
j2 <- edge.arr.ind[i,2]
new.ad[j1,j2] <- sqrt(sum(new.xyz[j1,] - new.xyz[j2,])^2)
}
eigen.out.w <- eigen(new.ad)
plot(eigen.out.w[[1]])
pp <- 1
matplot(eigen.out.w[[2]][,pp],type="l")
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=60000)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=6)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=0.5)
}
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigen.out.w[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigen.out.w[[2]][,pp]) > mean(abs(eigen.out.w[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=0.05)
}
k <- 20
L <- ceiling(sqrt(k))-1
M <- 0
ttl <- paste("l=",L," m=", M)
new.xyz <- xyz * (0+eigenout[[2]][,k])/mean(eigenout[[2]][,k])
#new.xyz <- xyz
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
plot3d(new.xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(new.xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigenout[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigenout[[2]][,pp]) > mean(abs(eigenout[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(new.xyz[ss,],color=i,radius=0.05)
}
plot3d(xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigenout[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigenout[[2]][,pp]) > mean(abs(eigenout[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(xyz[ss,],color=i,radius=10)
}
plot3d(xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigenout[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigenout[[2]][,pp]) > mean(abs(eigenout[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(xyz[ss,],color=i,radius=100)
}
plot3d(xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigen.out.w[[1]]))
picks <- sample(1:length(eigenout[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigenout[[2]][,pp]) > mean(abs(eigenout[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(xyz[ss,],color=i,radius=1000)
}
plot3d(xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigenout[[1]]))
picks <- sample(1:length(eigenout[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigenout[[2]][,pp]) > mean(abs(eigenout[[2]][,pp])) * 5)
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(xyz[ss,],color=i,radius=1000)
}
plot3d(xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigenout[[1]]))
picks <- sample(1:length(eigenout[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigenout[[2]][,pp]) > mean(abs(eigenout[[2]][,pp])) )
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(xyz[ss,],color=i,radius=1000)
}
plot3d(xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigenout[[1]]))
picks <- sample(1:length(eigenout[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigenout[[2]][,pp]) > mean(abs(eigenout[[2]][,pp])) )
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(xyz[ss,],color=i,radius=1)
}
plot3d(xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigenout[[1]]))
picks <- sample(1:length(eigenout[[1]]),7)
picks <- 1:7
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigenout[[2]][,pp]) > mean(abs(eigenout[[2]][,pp])) )
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(xyz[ss,],color=i,radius=0.1)
}
plot3d(xyz,main=ttl,xlab="",ylab="",zlab="",axes=FALSE)
segments3d(xyz[c(t(sp.mesh$edge)),])
col <- rep(0,length(eigenout[[1]]))
picks <- sample(1:length(eigenout[[1]]),7)
picks <-2
for(i in 1:length(picks)){
pp <-picks[i]
ss <- which(abs(eigenout[[2]][,pp]) > mean(abs(eigenout[[2]][,pp])) )
#ss <- which(abs(eigen.out.w[[2]][,pp]) > 0.003)
#col[ss] <- i
spheres3d(xyz[ss,],color=i,radius=0.1)
}
